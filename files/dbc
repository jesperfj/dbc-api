#!/bin/bash

# Needed for urlencode
export LANG=C


DBC_HOME=$HOME/.dbc

if [ -z "$DBC_URL" ] ; then
    DBC_URL="https://dbc-api.herokuapp.com"
fi

if [ ! -e $DBC_HOME ] ; then
	mkdir $DBC_HOME
fi

if [ ! -d $DBC_HOME ] ; then
	echo "Error: $DBC_HOME is not a directory"
	exit 1
fi

if [ -e $DBC_HOME/apikey ] ; then
	APIKEY=`cat $DBC_HOME/apikey`
fi

if [ -e $DBC_HOME/database ] ; then
	DATABASE=`cat $DBC_HOME/database`
fi
	
if [ -z "$APIKEY" ] && [ "$1" != "key" ] ; then
	echo "You must set an api key with 'dbc key <apikey>' before you can run any commands."
	echo "Get the key from https://dbconsole.herokuapp.com/user"
	exit 1
fi

if [ -z "$DATABASE" ] && [ "$1" != "use" ] ; then
	echo "You must set a database with 'dbc use <database>' before you can run any commands."
	echo "Configure your databases at https://dbconsole.herokuapp.com"
	exit 1
fi


# From: http://blogs.gnome.org/shaunm/2009/12/05/urlencode-and-urldecode-in-sh/
urlencode() {
	arg="$1"
	i="0"
	while [ "$i" -lt ${#arg} ]; do
		c=${arg:$i:1}
		if echo "$c" | grep -q '[a-zA-Z/:_\.\-]'; then
			echo -n "$c"
		else
			echo -n "%"
			printf "%X" "'$c'"
		fi
		i=$((i+1))
	done
}

key() {
	echo $1 > $DBC_HOME/apikey
	chmod go-rwX $DBC_HOME/apikey
	echo "API key set"
}

use() {
	urlencode "$1" > $DBC_HOME/database
	echo "Database set to $1"
}

query() {
	QUERY=`urlencode "$@"`
	curl -s "$DBC_URL/data/$DATABASE/query?q=$QUERY" -H "Authorization: $APIKEY"
}

describe() {
	curl -s "$DBC_URL/data/$DATABASE/sobjects/$1" -H "Authorization: $APIKEY"
}

usage() {
	cat <<EOF
Usage: $0 COMMAND [parameters]

Commands:

  key APIKEY         # Save API key. Required before you can run other commands
  use DATABASE       # Set which database to use
  query "QUERY"      # Execute a SOQL query. It's best to enclose the query in double or single quotes
  describe [SOBJECT] # Describe an sObject. Run with no argument to get a list of all sObjects

EOF
}


CMD=$1
shift

case $CMD in 
"query")
	query "$@"
	;;
"key")
	key "$@"
	;;
"describe")
	describe "$@"
	;;
"use")
	use "$@"
	;;
*)
	usage
	;;
esac

